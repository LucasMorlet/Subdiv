// Version du GLSL
#version 430 core

layout( quads, equal_spacing, ccw ) in;

// Input
in vec2 tex_coords_tes[];

// Outputs
out vec3 tes_tangente;
out vec3 tes_binormale;
out vec3 tes_normale;
out vec2 tex_coords;
out vec2 tex_coords_locales;

void main()
{
    // Position du sommet
    vec4 a = mix( gl_in[0].gl_Position, gl_in[1].gl_Position, gl_TessCoord.s );
    vec4 b = mix( gl_in[3].gl_Position, gl_in[2].gl_Position, gl_TessCoord.s );
    gl_Position = mix( a, b, gl_TessCoord.t );

    // Les coordonn√©es de textures
    vec2 c = mix( tex_coords_tes[0], tex_coords_tes[1], gl_TessCoord.s );
    vec2 d = mix( tex_coords_tes[3], tex_coords_tes[2], gl_TessCoord.s );
    tex_coords = mix( c, d, gl_TessCoord.t ).st;
    tex_coords_locales = gl_TessCoord.st;

    // Les trois vecteurs normales
    tes_tangente  = normalize ( gl_in[1].gl_Position.xyz - gl_in[0].gl_Position.xyz );
    tes_binormale = normalize ( gl_in[3].gl_Position.xyz - gl_in[0].gl_Position.xyz );
    tes_normale   = cross ( tes_tangente, tes_binormale );

}
